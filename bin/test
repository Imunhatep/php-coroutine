#!/usr/bin/env php
<?php
set_time_limit(0);

(@include_once __DIR__.'/../vendor/autoload.php') || @include_once __DIR__.'/../../../autoload.php';

use App\Service\Kernel\KernelInterface;
use App\Service\KernelLoop;

function counter(int $id, int $till = 10): \Generator
{
    for($i=0;$i < $till; $i++){
        yield;
        dump(sprintf("[Counter #%d]:    %d", $id, $i));
    }
}

function logUsedMemory()
{
    return function () {
        $mem = memory_get_usage(true);
        $pMem = memory_get_peak_usage(true);

        dump(
            sprintf(
                '[%s] Memory in use: %0.1fM, peak: %0.1fM',
                date('H:i:s'),
                ($mem / 1024 / 1024),
                ($pMem / 1024 / 1024)
            )
        );
    };
}

/** @var KernelInterface $scheduler */
$scheduler = new KernelLoop;
$scheduler->addPeriodicTimer(5, logMemory());
$scheduler->schedule(counter(1, 5));
$scheduler->schedule(counter(2, 2));
$scheduler->run();



